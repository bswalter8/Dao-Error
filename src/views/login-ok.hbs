

<script>
     
        
</script>


<div class="container text-center my-3">
    <div class="jumbotron" style="background-color: green;color: white;">
        <h1>USER OK LOGIN!</h1>
        <h2><i>Bienvenido {{usuario}}</i></h2>
        <br>
        <h3>Nombre: {{nombre}}</h3>
        <h3>Apellido: {{apellido}}</h3>
        <h3>Email: {{email}}</h3>
        <button class="btn btn-danger my-5" onclick="logout()">LOGOUT</button>
    </div>
</div>

    <div class="container mt-3">
        <div class="jumbotron">
            <h1>Ingrese Producto</h1>
            <br>

            <form id="formAgregarProducto">
                <!-- Campo nombre del producto -->
                <div class="form-group">
                    <label for="nombre">Nombre</label>
                    <input id="nombre" class="form-control" type="text" name="title" required>
                </div>

                <!-- Campo precio del producto -->
                <div class="form-group">
                    <label for="precio">Precio</label>
                    <input id="precio" class="form-control" type="number" step="0.01" name="price" required>
                </div>

                <!-- Campo url de la foto del producto -->
                <div class="form-group">
                    <label for="foto">Foto URL</label>
                    <input id="foto" class="form-control" type="url" name="thumbnail">
                </div>

                <!-- Botón de envío -->
                <button class="btn btn-success mt-3">Enviar</button>
            </form>
            <br>
            <div id="productos"></div>
        </div>

        <div class="jumbotron">
            <h1>Centro de Mensajes (Compresión: <span id="compresion-info"></span>%)</h1>
            <br>

            <input type="text" id="username" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu email">
            <input type="text" id="firstname" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu nombre">
            <input type="text" id="lastname" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu apellido">
            <input type="text" id="age" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu edad">
            <input type="text" id="alias" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu alias">
            <input type="text" id="avatar" class="form-control w-50 my-2 mr-2" placeholder="Ingresá tu avatar (url)">
            <hr>

            <hr>

            <div id="mensajes"></div>

            <form id="formPublicarMensaje" class="form-inline" autocomplete="off">
                <div class="form-group">
                    <input disabled id="inputMensaje" type="text" class="form-control my-2 mr-2"
                        placeholder="Ingresá un mensaje...">
                    <button disabled id="btnEnviar" type="submit" class="btn btn-primary my-2">Enviar!</button>
                </div>
            </form>
        </div>
    </div>



    
    <script>
             function redireccionar(pagina) {
        location.href = pagina;
    } 

    function logout() {
        console.log('logout');
        redireccionar('/logout')
    }
    
        
        const socket = io.connect();

//------------------------------------------------------------------------------------

const formAgregarProducto = document.getElementById('formAgregarProducto')
formAgregarProducto.addEventListener('submit', e => {
    e.preventDefault()
    const producto = {
        title: formAgregarProducto[0].value,
        price: formAgregarProducto[1].value,
        thumbnail: formAgregarProducto[2].value
    }
    socket.emit('update', producto);
    formAgregarProducto.reset()
})

socket.on('productos', productos => {
    console.log(productos)
    makeHtmlTable(productos).then(html => {
        document.getElementById('productos').innerHTML = html
    })
});

/*function makeHtmlTable(mensajes) {
    return mensajes.map(mensaje => {
        return (`
        <div>
            <b style="color:blue;">${mensaje.name}</b>
            [<span style="color:brown;">${mensaje.fyh}</span>] :
            <i style="color:green;">${mensaje.price}</i>
            <img width="50" src="${mensaje.thumbnail}" alt=" ">
        </div>
    `)
    }).join(" ");
}*/

function makeHtmlTable(productos) {
     return fetch('../src/views/tabla-productos.hbs')
        .then(respuesta => {respuesta.text()
        })
        .then(plantilla => {
            const template = Handlebars.compile(plantilla);
            const html = template({ productos })
            return html
        })
}

//-------------------------------------------------------------------------------------

// MENSAJES

/* --------------------- DESNORMALIZACIÓN DE MENSAJES ---------------------------- */
// Definimos un esquema de autor
const schemaAuthor = new normalizr.schema.Entity('author', {}, { idAttribute: 'id' });

// Definimos un esquema de mensaje
const schemaMensaje = new normalizr.schema.Entity('post', { author: schemaAuthor }, { idAttribute: '_id' })

// Definimos un esquema de posts
const schemaMensajes = new normalizr.schema.Entity('posts', { mensajes: [schemaMensaje] }, { idAttribute: 'id' })
/* ----------------------------------------------------------------------------- */

const inputUsername = document.getElementById('username')
const inputMensaje = document.getElementById('inputMensaje')
const btnEnviar = document.getElementById('btnEnviar')

const formPublicarMensaje = document.getElementById('formPublicarMensaje')
formPublicarMensaje.addEventListener('submit', e => {
    e.preventDefault()

    const mensaje = {
        author: {
            email: inputUsername.value,
            nombre: document.getElementById('firstname').value,
            apellido: document.getElementById('lastname').value,
            edad: document.getElementById('age').value,
            alias: document.getElementById('alias').value,
            avatar: document.getElementById('avatar').value
        },
        text: inputMensaje.value
    }

    socket.emit('nuevoMensaje', mensaje);
    formPublicarMensaje.reset()
    inputMensaje.focus()
})

socket.on('mensajes', mensajesN => {

    let mensajesNsize = JSON.stringify(mensajesN).length
    console.log(mensajesN, mensajesNsize);

    let mensajesD = normalizr.denormalize(mensajesN.result, schemaMensajes, mensajesN.entities)

    let mensajesDsize = JSON.stringify(mensajesD).length
    console.log(mensajesD, mensajesDsize);

    let porcentajeC = parseInt((mensajesNsize * 100) / mensajesDsize)
    console.log(`Porcentaje de compresión ${porcentajeC}%`)
    document.getElementById('compresion-info').innerText = porcentajeC

    console.log(mensajesD.mensajes);
    const html = makeHtmlList(mensajesD.mensajes)
    document.getElementById('mensajes').innerHTML = html;
})

function makeHtmlList(mensajes) {
    return mensajes.map(mensaje => {
        return (`
        <div>
            <b style="color:blue;">${mensaje.author.email}</b>
            [<span style="color:brown;">${mensaje.fyh}</span>] :
            <i style="color:green;">${mensaje.text}</i>
            <img width="50" src="${mensaje.author.avatar}" alt=" ">
        </div>
    `)
    }).join(" ");
}

inputUsername.addEventListener('input', () => {
    const hayEmail = inputUsername.value.length
    const hayTexto = inputMensaje.value.length
    inputMensaje.disabled = !hayEmail
    btnEnviar.disabled = !hayEmail || !hayTexto
})

inputMensaje.addEventListener('input', () => {
    const hayTexto = inputMensaje.value.length
    btnEnviar.disabled = !hayTexto
})
</script>
  